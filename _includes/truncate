{% capture tmp %}
<!--
Truncate multibyte post.content
-------------------------------
The original filter `truncate` of Liquid 2.2.2 on GitHub would truncate 
multibyte character incorrectly.

So this function checks the last letter of truncated content and if it is
invisible ascii character, then adjust length of truncate.

If you prefer to change the length of truncate, edit the number directly 
below so the `truncate` can accept only hard coded number.
-->
{% capture _C2 %}{{ "±" | truncate:1, "" }}{% endcapture %}
{% capture _CF %}{{ "ρ" | truncate:1, "" }}{% endcapture %}
{% capture _D0 %}{{ "ж" | truncate:1, "" }}{% endcapture %}
{% capture _D1 %}{{ "ё" | truncate:1, "" }}{% endcapture %}
{% capture _E2 %}{{ "…" | truncate:1, "" }}{% endcapture %}
{% capture _EF %}{{ "ａ" | truncate:1, "" }}{% endcapture %}

{% assign  _a = site.truncate_len %}
{% capture _b %}{{ _a | minus:1 }}{% endcapture %}
{% capture _c %}{{ _b | minus:1 }}{% endcapture %}

{% capture _x %}{{ post.content | strip_html | truncate: _a, "" }}{% endcapture %}
{% capture _y %}{{ post.content | strip_html | truncate: _b, "" }}{% endcapture %}
{% capture _z %}{{ post.content | strip_html | truncate: _c, "" }}{% endcapture %}

{% capture _i %}{{ _x | replace: _y, "" }}{% endcapture %}
{% capture _j %}{{ _y | replace: _z, "" }}{% endcapture %}

{% if    _i <= _C2 and _CF <= _i %}{% capture truncate %}{{ _y }}{% endcapture %}
{% elsif _i <= _D0 and _D1 <= _i %}{% capture truncate %}{{ _y }}{% endcapture %}
{% elsif _j <= _E2 and _EF <= _j %}{% capture truncate %}{{ _z }}{% endcapture %}
{% else %}                         {% capture truncate %}{{ _x }}{% endcapture %}
{% endif %}

{% assign _a = nil %}
{% assign _b = nil %}
{% assign _c = nil %}
{% assign _i = nil %}
{% assign _j = nil %}
{% assign _x = nil %}
{% assign _y = nil %}
{% assign _z = nil %}

{% assign _C2 = nil %}
{% assign _CF = nil %}
{% assign _D0 = nil %}
{% assign _D1 = nil %}
{% assign _E2 = nil %}
{% assign _EF = nil %}
{% endcapture %}{% assign tmp = nil %}