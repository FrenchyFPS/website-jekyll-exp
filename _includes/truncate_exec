{% capture tmp %}
<!--
Truncate multibyte post.content
-------------------------------
The original filter `truncate` of Liquid 2.2.2 on GitHub would truncate 
multibyte character incorrectly.

So this function checks the last letter of truncated content and if it is
invisible ascii character, then adjust length of truncate.
-->
{% if site.excerpt %}
	{% capture truncated %}<p>{{ post.excerpt }}</p>{% endcapture %}
{% else %}{% if post.content contains '<!-- more start -->' and post.content contains '<!-- more end -->'%}
		{% capture truncated %}{{ post.content | replace:'more start -->','' | replace:'<!-- more end','' }}{% endcapture %}
{% else %}{% if site.safe %}
	{% assign  _a = site.truncate_len %}
	{% capture _b %}{{ _a | minus:1 }}{% endcapture %}
	{% capture _c %}{{ _b | minus:1 }}{% endcapture %}

	{% capture _x %}{{ post.content | strip_html | truncate: _a, "" }}{% endcapture %}
	{% capture _y %}{{ _x | truncate: _b, "" }}{% endcapture %}
	{% capture _z %}{{ _y | truncate: _c, "" }}{% endcapture %}

	{% capture _a %}{{ _x | replace: _y, "" }}{% endcapture %}
	{% capture _b %}{{ _y | replace: _z, "" }}{% endcapture %}

	{% assign truncated = nil %}
	{% if _C2 <= _a and _a <= _CF %}{% capture truncated %}<p>{{ _y }}...</p>{% endcapture %}{% endif %}
	{% if _D0 <= _a and _a <= _D1 %}{% capture truncated %}<p>{{ _y }}...</p>{% endcapture %}{% endif %}
	{% if _E2 <= _b and _b <= _EF %}{% capture truncated %}<p>{{ _z }}...</p>{% endcapture %}{% endif %}
	{% if truncated == nil %}       {% capture truncated %}<p>{{ _x }}...</p>{% endcapture %}{% endif %}
{% else %}
	{% capture truncated %}{{ post.content | postmorefilter }}{% endcapture %}
{% endif %}{% endif %}{% endif %}
{% endcapture %}{% assign tmp = nil %}{{ truncated }}